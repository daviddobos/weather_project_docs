{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.3", "generated_at": "2025-04-27T13:59:06.425631Z", "invocation_id": "4eb410e8-f23e-4620-8a09-bfe482911135", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:53.225916Z", "completed_at": "2025-04-27T13:58:53.246695Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:53.247767Z", "completed_at": "2025-04-27T13:58:57.159239Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 3.9342732429504395, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.s_fct_weather_forecast", "compiled": true, "compiled_code": "WITH b_weather_forecast AS (\n    SELECT \n        *\n    FROM \"wh_weather\".\"dbt_bronze\".\"b_weather_forecast\"\n),\n\ns_dim_country AS (\n    SELECT\n        *\n    FROM \"wh_weather\".\"dbt_silver\".\"s_dim_country\"\n),\n\ns_dim_city AS (\n    SELECT\n        *\n    FROM \"wh_weather\".\"dbt_silver\".\"s_dim_city\"\n),\n\njoin_country_cd AS (\n    SELECT\n        b_weather_forecast.*\n        ,s_dim_country.country_cd AS country_cd\n    FROM b_weather_forecast\n    JOIN s_dim_country\n    ON b_weather_forecast.country_nm = s_dim_country.country_nm\n),\n\ngen_sk AS (\n    SELECT\n        *\n        ,lower(convert(varchar(32), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(m_valid_dt as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(forecast_dt as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(country_cd as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(city_nm as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(time_epoch as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n AS weather_pk\n        ,lower(convert(varchar(32), hashbytes('md5', coalesce(convert(varchar(8000), concat(coalesce(cast(country_cd as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'), '-', coalesce(cast(city_nm as VARCHAR(64)), '_dbt_utils_surrogate_key_null_'))), '')), 2))\n AS city_fk\n    FROM join_country_cd\n),\n\njoin_county_nm AS (\n    SELECT\n        gen_sk.*\n        ,s_dim_city.county_nm\n    FROM gen_sk\n    JOIN s_dim_city\n    ON gen_sk.city_fk = s_dim_city.city_pk\n),\n\nunit_conversion AS (\n    SELECT\n        *\n        ,gust_kph_no * 0.621371 AS gust_miph_no\n        ,temp_c_no * 33.8 AS temp_f_no\n        ,temp_c_no * 273.15 AS temp_k_no\n        ,heatindex_c_no * 33.8 AS heatindex_f_no\n        ,heatindex_c_no * 273.15 AS heatindex_k_no\n        ,vis_km_no * 0.621371 AS vis_mi_no\n        ,wind_kph_no * 0.621371 AS wind_miph_no\n        ,windchill_c_no * 33.8 AS windchill_f_no\n        ,windchill_c_no * 273.15 AS windchill_k_no\n    FROM join_county_nm\n),\n\nweather_categories AS (\n    SELECT\n        *\n        -- Rain Chance Category\n        ,CASE\n            WHEN rain_chance_pct BETWEEN 0 AND 20 THEN 'Very Low'\n            WHEN rain_chance_pct BETWEEN 21 AND 40 THEN 'Low'\n            WHEN rain_chance_pct BETWEEN 41 AND 60 THEN 'Moderate'\n            WHEN rain_chance_pct BETWEEN 61 AND 80 THEN 'High'\n            WHEN rain_chance_pct BETWEEN 81 AND 100 THEN 'Very High'\n            ELSE 'Unknown'\n        END AS rain_chance_cd\n\n        -- Snow Chance Category\n        ,CASE\n            WHEN snow_chance_pct BETWEEN 0 AND 20 THEN 'Very Low'\n            WHEN snow_chance_pct BETWEEN 21 AND 40 THEN 'Low'\n            WHEN snow_chance_pct BETWEEN 41 AND 60 THEN 'Moderate'\n            WHEN snow_chance_pct BETWEEN 61 AND 80 THEN 'High'\n            WHEN snow_chance_pct BETWEEN 81 AND 100 THEN 'Very High'\n            ELSE 'Unknown'\n        END AS snow_chance_cd\n\n        -- Cloud Coverage Category\n        ,CASE\n            WHEN cloud_coverage_pct BETWEEN 0 AND 20 THEN 'Clear'\n            WHEN cloud_coverage_pct BETWEEN 21 AND 40 THEN 'Partly Cloudy'\n            WHEN cloud_coverage_pct BETWEEN 41 AND 60 THEN 'Cloudy'\n            WHEN cloud_coverage_pct BETWEEN 61 AND 80 THEN 'Overcast'\n            WHEN cloud_coverage_pct BETWEEN 81 AND 100 THEN 'Completely Overcast'\n            ELSE 'Unknown'\n        END AS cloud_coverage_cd\n\n        -- Temperature Category - Cels\n        ,CASE\n            WHEN temp_c_no <= 0 THEN 'Very Cold'\n            WHEN temp_c_no BETWEEN 1 AND 10 THEN 'Cold'\n            WHEN temp_c_no BETWEEN 11 AND 20 THEN 'Cool'\n            WHEN temp_c_no BETWEEN 21 AND 30 THEN 'Warm'\n            WHEN temp_c_no BETWEEN 31 AND 40 THEN 'Hot'\n            WHEN temp_c_no > 40 THEN 'Very Hot'\n            ELSE 'Unknown'\n        END AS temp_c_cd\n        -- Temperature Category - Kelvin\n        ,CASE\n            WHEN temp_k_no <= 0 THEN 'Very Cold'\n            WHEN temp_k_no BETWEEN 1 AND 10 THEN 'Cold'\n            WHEN temp_k_no BETWEEN 11 AND 20 THEN 'Cool'\n            WHEN temp_k_no BETWEEN 21 AND 30 THEN 'Warm'\n            WHEN temp_k_no BETWEEN 31 AND 40 THEN 'Hot'\n            WHEN temp_k_no > 40 THEN 'Very Hot'\n            ELSE 'Unknown'\n        END AS temp_k_cd\n        -- Temperature Category - Fahr\n        ,CASE\n            WHEN temp_f_no <= 0 THEN 'Very Cold'\n            WHEN temp_f_no BETWEEN 1 AND 10 THEN 'Cold'\n            WHEN temp_f_no BETWEEN 11 AND 20 THEN 'Cool'\n            WHEN temp_f_no BETWEEN 21 AND 30 THEN 'Warm'\n            WHEN temp_f_no BETWEEN 31 AND 40 THEN 'Hot'\n            WHEN temp_f_no > 40 THEN 'Very Hot'\n            ELSE 'Unknown'\n        END AS temp_f_cd\n\n        -- Humidity Category\n        ,CASE\n            WHEN humidity_pct BETWEEN 0 AND 20 THEN 'Very Low'\n            WHEN humidity_pct BETWEEN 21 AND 40 THEN 'Low'\n            WHEN humidity_pct BETWEEN 41 AND 60 THEN 'Moderate'\n            WHEN humidity_pct BETWEEN 61 AND 80 THEN 'High'\n            WHEN humidity_pct BETWEEN 81 AND 100 THEN 'Very High'\n            ELSE 'Unknown'\n        END AS humidity_cd\n\n    FROM unit_conversion\n),\n\nreorder AS (\n    SELECT\n        m_valid_dt\n        ,weather_pk\n        ,forecast_dt\n        ,city_nm\n        ,city_fk\n        ,country_cd\n        ,country_nm\n        ,county_nm\n        ,cloud_coverage_pct\n        ,cloud_coverage_cd\n        ,gust_kph_no\n        ,gust_miph_no\n        ,heatindex_c_no\n        ,heatindex_f_no\n        ,heatindex_k_no\n        ,humidity_pct\n        ,humidity_cd\n        ,is_day_flg\n        ,precip_mm_no\n        ,pressure_mb_no\n        ,temp_c_no\n        ,temp_c_cd\n        ,temp_f_no\n        ,temp_f_cd\n        ,temp_k_no\n        ,temp_k_cd\n        ,temp_feelslike_no\n        ,date_dtt\n        ,time_epoch\n        ,rain_chance_pct\n        ,rain_chance_cd\n        ,snow_chance_pct\n        ,snow_chance_cd\n        ,uv_no\n        ,vis_km_no\n        ,vis_mi_no\n        ,wind_dir_cd\n        ,wind_kph_no\n        ,wind_miph_no\n        ,windchill_c_no\n        ,windchill_f_no\n        ,windchill_k_no\n        ,m_extracted_at_dttm\n        ,m_updated_at_dttm\n    FROM weather_categories\n)\n\nSELECT * FROM reorder", "relation_name": "\"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:57.202245Z", "completed_at": "2025-04-27T13:58:57.216597Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:57.224478Z", "completed_at": "2025-04-27T13:58:59.581689Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 2.407644748687744, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.g_dim_county_nm", "compiled": true, "compiled_code": "WITH s_fct_astro AS (\n    SELECT DISTINCT\n        county_nm\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_forecast AS (\n    SELECT DISTINCT\n        county_nm\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_weather AS (\n    SELECT DISTINCT\n        county_nm\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_forecast AS (\n    SELECT DISTINCT\n        county_nm\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\nunion_select AS (\n    SELECT * FROM s_fct_astro\n    UNION\n    SELECT * FROM s_fct_astro_forecast\n    UNION\n    SELECT * FROM s_fct_weather\n    UNION\n    SELECT * FROM s_fct_weather_forecast\n)\n\nSELECT * FROM union_select", "relation_name": "\"wh_weather\".\"dbt_gold\".\"g_dim_county_nm\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:57.197040Z", "completed_at": "2025-04-27T13:58:57.213611Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:57.218110Z", "completed_at": "2025-04-27T13:58:59.841337Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 2.668390989303589, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.g_dim_country_cd", "compiled": true, "compiled_code": "WITH s_fct_astro AS (\n    SELECT DISTINCT\n        country_cd\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_forecast AS (\n    SELECT DISTINCT\n        country_cd\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_weather AS (\n    SELECT DISTINCT\n        country_cd\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_forecast AS (\n    SELECT DISTINCT\n        country_cd\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\nunion_select AS (\n    SELECT * FROM s_fct_astro\n    UNION\n    SELECT * FROM s_fct_astro_forecast\n    UNION\n    SELECT * FROM s_fct_weather\n    UNION\n    SELECT * FROM s_fct_weather_forecast\n)\n\nSELECT * FROM union_select", "relation_name": "\"wh_weather\".\"dbt_gold\".\"g_dim_country_cd\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:57.190059Z", "completed_at": "2025-04-27T13:58:57.204080Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:57.213611Z", "completed_at": "2025-04-27T13:59:01.179534Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 4.008512735366821, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.dq_standard_tests", "compiled": true, "compiled_code": "WITH s_dim_city_not_null_city_pk_base AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,'s_dim_city' AS table_nm\n        ,'not_null' AS test_type_cd\n        ,'city_pk' AS tested_field_nm\n        ,'Records where the \"city_pk\" is null' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_dim_city\"\n),\n\ns_dim_city_not_null_city_pk_cnt AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_dim_city_not_null_city_pk\"\n    GROUP BY \n        country_cd\n        ,county_nm\n),\n\ns_dim_city_not_null_city_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_dim_city_not_null_city_pk_base AS base\n    LEFT JOIN s_dim_city_not_null_city_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_forecast_not_null_astro_forecast_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'not_null' AS test_type_cd\n        ,'forecast_pk' AS tested_field_nm\n        ,'Records where the \"forecast_pk\" is null' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_astro_forecast_not_null_astro_forecast_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_forecast_not_null_astro_forecast_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_forecast_not_null_astro_forecast_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_forecast_not_null_astro_forecast_pk_base AS base\n    LEFT JOIN s_fct_astro_forecast_not_null_astro_forecast_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_not_null_astro_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'not_null' AS test_type_cd\n        ,'astro_pk' AS tested_field_nm\n        ,'Records where the \"astro_pk\" is null' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_not_null_astro_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_not_null_astro_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_not_null_astro_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_not_null_astro_pk_base AS base\n    LEFT JOIN s_fct_astro_not_null_astro_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_not_null_weather_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'not_null' AS test_type_cd\n        ,'weather_pk' AS tested_field_nm\n        ,'Records where the \"weather_pk\" is null' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_not_null_weather_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_not_null_weather_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_not_null_weather_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_not_null_weather_pk_base AS base\n    LEFT JOIN s_fct_weather_forecast_not_null_weather_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_not_null_weather_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'not_null' AS test_type_cd\n        ,'weather_pk' AS tested_field_nm\n        ,'Records where the \"weather_pk\" is null' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_not_null_weather_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_not_null_weather_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_not_null_weather_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_not_null_weather_pk_base AS base\n    LEFT JOIN s_fct_weather_not_null_weather_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_dim_city_unique_city_pk_base AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,'s_dim_city' AS table_nm\n        ,'unique' AS test_type_cd\n        ,'city_pk' AS tested_field_nm\n        ,'Records where the \"city_pk\" is duplicated' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_dim_city\"\n),\n\ns_dim_city_unique_city_pk_cnt AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_dim_city_unique_city_pk\"\n    GROUP BY \n        country_cd\n        ,county_nm\n),\n\ns_dim_city_unique_city_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_dim_city_unique_city_pk_base AS base\n    LEFT JOIN s_dim_city_unique_city_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\n\ns_fct_astro_forecast_unique_astro_forecast_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro_forecast' AS table_nm\n        ,'unique' AS test_type_cd\n        ,'astro_forecast_pk' AS tested_field_nm\n        ,'Records where the \"astro_forecast_pk\" is duplicated' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_astro_forecast_unique_astro_forecast_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_forecast_unique_astro_forecast_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_forecast_unique_astro_forecast_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_forecast_unique_astro_forecast_pk_base AS base\n    LEFT JOIN s_fct_astro_forecast_unique_astro_forecast_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_unique_astro_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'unique' AS test_type_cd\n        ,'astro_pk' AS tested_field_nm\n        ,'Records where the \"astro_pk\" is duplicated' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_unique_astro_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_unique_astro_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_unique_astro_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_unique_astro_pk_base AS base\n    LEFT JOIN s_fct_astro_unique_astro_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_unique_weather_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'unique' AS test_type_cd\n        ,'weather_pk' AS tested_field_nm\n        ,'Records where the \"weather_pk\" is duplicated' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_unique_weather_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_unique_weather_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_unique_weather_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_unique_weather_pk_base AS base\n    LEFT JOIN s_fct_weather_forecast_unique_weather_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_unique_weather_pk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'unique' AS test_type_cd\n        ,'weather_pk' AS tested_field_nm\n        ,'Records where the \"weather_pk\" is duplicated' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_unique_weather_pk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_unique_weather_pk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_unique_weather_pk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_unique_weather_pk_base AS base\n    LEFT JOIN s_fct_weather_unique_weather_pk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n), \n\ns_fct_astro_forecast_rel_s_dim_city_city_fk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro_forecast' AS table_nm\n        ,'relationships' AS test_type_cd\n        ,'city_fk' AS tested_field_nm\n        ,'Records where the \"city_fk\" does not have a matching entry in the \"s_dim_city\" dimension table' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_astro_forecast_rel_s_dim_city_city_fk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_forecast_rel_s_dim_city_city_fk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_forecast_rel_s_dim_city_city_fk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_forecast_rel_s_dim_city_city_fk_base AS base\n    LEFT JOIN s_fct_astro_forecast_rel_s_dim_city_city_fk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\n\ns_fct_astro_rel_s_dim_city_city_fk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'relationships' AS test_type_cd\n        ,'city_fk' AS tested_field_nm\n        ,'Records where the \"city_fk\" does not have a matching entry in the \"s_dim_city\" dimension table' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_rel_s_dim_city_city_fk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_rel_s_dim_city_city_fk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_rel_s_dim_city_city_fk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_rel_s_dim_city_city_fk_base AS base\n    LEFT JOIN s_fct_astro_rel_s_dim_city_city_fk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_rel_s_dim_city_city_fk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'relationships' AS test_type_cd\n        ,'city_fk' AS tested_field_nm\n        ,'Records where the \"city_fk\" does not have a matching entry in the \"s_dim_city\" dimension table' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_rel_s_dim_city_city_fk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_rel_s_dim_city_city_fk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_rel_s_dim_city_city_fk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_rel_s_dim_city_city_fk_base AS base\n    LEFT JOIN s_fct_weather_forecast_rel_s_dim_city_city_fk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_rel_s_dim_city_city_fk_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'relationships' AS test_type_cd\n        ,'city_fk' AS tested_field_nm\n        ,'Records where the \"city_fk\" does not have a matching entry in the \"s_dim_city\" dimension table' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_rel_s_dim_city_city_fk_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_rel_s_dim_city_city_fk\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_rel_s_dim_city_city_fk_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_rel_s_dim_city_city_fk_base AS base\n    LEFT JOIN s_fct_weather_rel_s_dim_city_city_fk_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\nunion_tests AS (\n    SELECT * FROM s_dim_city_not_null_city_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_forecast_not_null_astro_forecast_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_not_null_astro_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_not_null_weather_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_not_null_weather_pk_joined\n    UNION ALL\n    SELECT * FROM s_dim_city_unique_city_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_forecast_unique_astro_forecast_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_unique_astro_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_unique_weather_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_unique_weather_pk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_forecast_rel_s_dim_city_city_fk_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_rel_s_dim_city_city_fk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_rel_s_dim_city_city_fk_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_rel_s_dim_city_city_fk_joined\n),\n\nfailed_record_cnt_fixed AS (\n    SELECT \n        m_valid_dt\n        ,country_cd\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,description\n        ,failed_record_cnt\n        ,CASE WHEN failed_record_cnt is NULL THEN 0 ELSE failed_record_cnt END AS failed_record_cnt_fixed\n    FROM union_tests\n),\n\nreorder AS (\n    SELECT \n        m_valid_dt\n        ,country_cd\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,description\n        ,failed_record_cnt_fixed as failed_record_cnt\n    FROM failed_record_cnt_fixed\n)\n\nSELECT * FROM reorder", "relation_name": "\"wh_weather\".\"dbt_dq\".\"dq_standard_tests\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:57.177188Z", "completed_at": "2025-04-27T13:58:57.204080Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:57.204080Z", "completed_at": "2025-04-27T13:59:02.209375Z"}], "thread_id": "Thread-9 (worker)", "execution_time": 5.037359714508057, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.dq_business_tests", "compiled": true, "compiled_code": "WITH s_fct_weather_forecast_invalid_cloud_coverage_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'cloud_coverage_cd' AS tested_field_nm\n        ,'Records where \"cloud_coverage_cd\" does not appropriately match \"cloud_coverage_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n\n),\n\ns_fct_weather_forecast_invalid_cloud_coverage_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_invalid_cloud_coverage_cd\"\n    GROUP BY \n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_invalid_cloud_coverage_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_invalid_cloud_coverage_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_invalid_cloud_coverage_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n\n),\n\ns_dim_city_accepted_values_country_cd_base AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,'s_dim_city' AS table_nm\n        ,'accepted_values' AS test_type_cd\n        ,'country_cd' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_dim_city\"\n\n),\n\ns_dim_city_accepted_values_country_cd_cnt AS (\n    SELECT\n        NULL AS m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,NULL AS forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_dim_city_accepted_values_country_cd\"\n    GROUP BY\n        --m_valid_dt\n        country_cd\n        ,county_nm\n        --,forecast_dt\n),\n\ns_dim_city_accepted_values_country_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_dim_city_accepted_values_country_cd_base AS base\n    LEFT JOIN s_dim_city_accepted_values_country_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\n\ns_fct_astro_accepted_range_m_valid_dt_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'m_valid_dt' AS tested_field_nm\n        ,'Records where the \"m_valid_dt\" is out of range' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n\n),\n\ns_fct_astro_accepted_range_m_valid_dt_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_accepted_range_m_valid_dt\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_accepted_range_m_valid_dt_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_accepted_range_m_valid_dt_base AS base\n    LEFT JOIN s_fct_astro_accepted_range_m_valid_dt_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_accepted_values_country_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro' AS table_nm\n        ,'accepted_values' AS test_type_cd\n        ,'country_cd' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n\n),\n\ns_fct_astro_accepted_values_country_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_accepted_range_m_valid_dt\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_accepted_values_country_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_accepted_values_country_cd_base AS base\n    LEFT JOIN s_fct_astro_accepted_values_country_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_forecast_accepted_range_m_valid_dt_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro_forecast' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'m_valid_dt' AS tested_field_nm\n        ,'Records where the \"m_valid_dt\" is out of range' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro\"\n),\n\ns_fct_astro_forecast_accepted_range_m_valid_dt_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_forecast_accepted_range_m_valid_dt\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_forecast_accepted_range_m_valid_dt_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_forecast_accepted_range_m_valid_dt_base AS base\n    LEFT JOIN s_fct_astro_forecast_accepted_range_m_valid_dt_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_astro_forecast_accepted_values_country_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_astro_forecast' AS table_nm\n        ,'accepted_values' AS test_type_cd\n        ,'country_cd' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_astro_forecast\"\n),\n\ns_fct_astro_forecast_accepted_values_country_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_astro_forecast_accepted_values_country_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_astro_forecast_accepted_values_country_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_astro_forecast_accepted_values_country_cd_base AS base\n    LEFT JOIN s_fct_astro_forecast_accepted_values_country_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_accepted_range_m_valid_dt_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'m_valid_dt' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_accepted_range_m_valid_dt_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_accepted_range_m_valid_dt\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n\n),\n\ns_fct_weather_accepted_range_m_valid_dt_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_accepted_range_m_valid_dt_base AS base\n    LEFT JOIN s_fct_weather_accepted_range_m_valid_dt_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_accepted_range_temp_c_no_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'temp_c_no' AS tested_field_nm\n        ,'Records where the \"temp_c_no\" is out of range' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_accepted_range_temp_c_no_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_accepted_range_temp_c_no\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_accepted_range_temp_c_no_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_accepted_range_temp_c_no_base AS base\n    LEFT JOIN s_fct_weather_accepted_range_temp_c_no_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_accepted_values_country_cd_base AS (\n        SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'accepted_values' AS test_type_cd\n        ,'country_cd' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_accepted_values_country_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_accepted_values_country_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_accepted_values_country_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_accepted_values_country_cd_base AS base\n    LEFT JOIN s_fct_weather_accepted_values_country_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_accepted_range_m_valid_dt_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'m_valid_dt' AS tested_field_nm\n        ,'Records where the \"m_valid_dt\" is out of range' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_accepted_range_m_valid_dt_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_accepted_range_m_valid_dt\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_accepted_range_m_valid_dt_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_accepted_range_m_valid_dt_base AS base\n    LEFT JOIN s_fct_weather_forecast_accepted_range_m_valid_dt_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_accepted_range_temp_c_no_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'accepted_range' AS test_type_cd\n        ,'temp_c_no' AS tested_field_nm\n        ,'Records where the \"temp_c_no\" is out of range' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_accepted_range_temp_c_no_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_accepted_range_temp_c_no\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_accepted_range_temp_c_no_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_accepted_range_temp_c_no_base AS base\n    LEFT JOIN s_fct_weather_forecast_accepted_range_temp_c_no_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_accepted_values_country_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'accepted_values' AS test_type_cd\n        ,'country_cd' AS tested_field_nm\n        ,'Records where the country_cd is not \"HU\" or \"RO\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_accepted_values_country_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_accepted_values_country_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_accepted_values_country_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_accepted_values_country_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_accepted_values_country_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_invalid_humidity_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'humidity_cd' AS tested_field_nm\n        ,'Records where \"humnidity_cd\" does not appropriately match \"humidity_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_invalid_humidity_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_invalid_humidity_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_invalid_humidity_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_invalid_humidity_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_invalid_humidity_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_invalid_rain_chance_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'rain_chance_cd' AS tested_field_nm\n        ,'Records where \"rain_chance_cd\" does not appropriately match \"rain_chance_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_invalid_rain_chance_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_invalid_rain_chance_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_invalid_rain_chance_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_invalid_rain_chance_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_invalid_rain_chance_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_invalid_snow_chance_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'snow_chance_cd' AS tested_field_nm\n        ,'Records where \"snow_chance_cd\" does not appropriately match \"snow_chance_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_invalid_snow_chance_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_invalid_snow_chance_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_invalid_snow_chance_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_invalid_snow_chance_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_invalid_snow_chance_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_forecast_invalid_temp_feelslike_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather_forecast' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'snow_chance_cd' AS tested_field_nm\n        ,'Records where \"feels_like_cd\" does not appropriately match \"feels_like_no\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\ns_fct_weather_forecast_invalid_temp_feelslike_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_forecast_invalid_temp_feelslike_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_forecast_invalid_temp_feelslike_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_forecast_invalid_temp_feelslike_cd_base AS base\n    LEFT JOIN s_fct_weather_forecast_invalid_temp_feelslike_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_invalid_cloud_coverage_cd_base AS (\n        SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'cloud_coverage_cd' AS tested_field_nm\n        ,'Records where \"cloud_coverage_cd\" does not appropriately match \"cloud_coverage_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_invalid_cloud_coverage_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_invalid_cloud_coverage_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_invalid_cloud_coverage_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_invalid_cloud_coverage_cd_base AS base\n    LEFT JOIN s_fct_weather_invalid_cloud_coverage_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_invalid_humidity_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'humidity_cd' AS tested_field_nm\n        ,'Records where \"humidity_cd\" does not appropriately match \"humidity_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_invalid_humidity_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_invalid_humidity_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_invalid_humidity_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_invalid_humidity_cd_base AS base\n    LEFT JOIN s_fct_weather_invalid_humidity_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_invalid_rain_chance_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'rain_chance_cd' AS tested_field_nm\n        ,'Records where \"rain_chance_cd\" does not appropriately match \"rain_chance_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_invalid_rain_chance_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_invalid_rain_chance_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_invalid_rain_chance_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_invalid_rain_chance_cd_base AS base\n    LEFT JOIN s_fct_weather_invalid_rain_chance_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_invalid_snow_chance_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'snow_chance_cd' AS tested_field_nm\n        ,'Records where \"snow_chance_cd\" does not appropriately match \"snow_chance_pct\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_invalid_snow_chance_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_invalid_snow_chance_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_invalid_snow_chance_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_invalid_snow_chance_cd_base AS base\n    LEFT JOIN s_fct_weather_invalid_snow_chance_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\ns_fct_weather_invalid_temp_feelslike_cd_base AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,'s_fct_weather' AS table_nm\n        ,'invalid' AS test_type_cd\n        ,'temp_feelslike_cd' AS tested_field_nm\n        ,'Records where \"temp_feelslike_cd\" does not appropriately match \"temp_feelslike_no\"' AS description\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather\"\n),\n\ns_fct_weather_invalid_temp_feelslike_cd_cnt AS (\n    SELECT\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        ,COUNT(*) AS failed_record_cnt\n    FROM \"wh_weather\".\"dbt_dq_test\".\"s_fct_weather_invalid_temp_feelslike_cd\"\n    GROUP BY\n        m_valid_dt\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n),\n\ns_fct_weather_invalid_temp_feelslike_cd_joined AS (\n    SELECT\n        base.m_valid_dt\n        ,base.country_cd\n        ,base.county_nm\n        ,base.forecast_dt\n        ,base.table_nm\n        ,base.test_type_cd\n        ,base.tested_field_nm\n        ,base.description\n        ,cnt_records.failed_record_cnt\n    FROM s_fct_weather_invalid_temp_feelslike_cd_base AS base\n    LEFT JOIN s_fct_weather_invalid_temp_feelslike_cd_cnt AS cnt_records\n    ON base.m_valid_dt = cnt_records.m_valid_dt\n    AND base.country_cd = cnt_records.country_cd\n    AND base.county_nm = cnt_records.county_nm\n    AND base.forecast_dt = cnt_records.forecast_dt\n),\n\nunion_tests AS (\n    SELECT * FROM s_fct_weather_forecast_invalid_cloud_coverage_cd_joined\n    UNION ALL\n    SELECT * FROM s_dim_city_accepted_values_country_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_accepted_range_m_valid_dt_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_accepted_values_country_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_forecast_accepted_range_m_valid_dt_joined\n    UNION ALL\n    SELECT * FROM s_fct_astro_forecast_accepted_values_country_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_accepted_range_m_valid_dt_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_accepted_range_temp_c_no_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_accepted_values_country_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_accepted_range_m_valid_dt_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_accepted_range_temp_c_no_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_accepted_values_country_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_invalid_cloud_coverage_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_invalid_humidity_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_invalid_rain_chance_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_invalid_snow_chance_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_forecast_invalid_temp_feelslike_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_invalid_cloud_coverage_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_invalid_humidity_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_invalid_rain_chance_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_invalid_snow_chance_cd_joined\n    UNION ALL\n    SELECT * FROM s_fct_weather_invalid_temp_feelslike_cd_joined\n),\n\nfailed_record_cnt_fixed AS (\n    SELECT \n        m_valid_dt\n        ,country_cd\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,description\n        ,failed_record_cnt\n        ,CASE WHEN failed_record_cnt is NULL THEN 0 ELSE failed_record_cnt END AS failed_record_cnt_fixed\n    FROM union_tests\n),\n\nreorder AS (\n    SELECT \n        m_valid_dt\n        ,country_cd\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,description\n        ,failed_record_cnt_fixed as failed_record_cnt\n    FROM failed_record_cnt_fixed\n)\n\nSELECT * FROM reorder", "relation_name": "\"wh_weather\".\"dbt_dq\".\"dq_business_tests\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:59.847584Z", "completed_at": "2025-04-27T13:58:59.855054Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:59.855054Z", "completed_at": "2025-04-27T13:59:04.183576Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 4.337133884429932, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.g_fct_weather_forecast_avg", "compiled": true, "compiled_code": "WITH s_fct_weather_forecast AS (\n    SELECT\n        m_valid_dt\n        ,weather_pk\n        ,city_nm\n        ,city_fk\n        ,country_cd\n        ,county_nm\n        ,forecast_dt\n        -- Group to the start of the month\n--       ,CAST(YEAR(forecast_dt) AS VARCHAR) + '-' + RIGHT('0' + CAST(MONTH(forecast_dt) AS VARCHAR), 2) + '-01' AS month_dt\n        ,temp_c_no\n        ,temp_feelslike_no\n        ,cloud_coverage_pct\n        ,precip_mm_no\n        ,humidity_pct\n        ,gust_kph_no\n        ,heatindex_c_no\n        ,wind_kph_no\n        ,windchill_c_no\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n),\n\n-- Step 1: Pre-aggregate by city, country, and m_valid_dt\ndaily_aggregates AS (\n    SELECT\n        m_valid_dt\n        ,forecast_dt\n        ,city_nm\n        ,city_fk\n        ,county_nm\n        ,country_cd\n        ,AVG(temp_c_no) AS temp_c_avg\n        ,AVG(cloud_coverage_pct) AS cloud_coverage_avg\n        ,AVG(precip_mm_no) AS precipitation_mm_avg\n        ,AVG(humidity_pct) AS humidity_avg\n        ,AVG(gust_kph_no) AS gust_kph_avg\n        ,AVG(heatindex_c_no) AS heatindex_c_no_avg\n        ,AVG(wind_kph_no) AS wind_kph_no_avg\n        ,AVG(windchill_c_no) AS windchill_c_no_avg\n    FROM s_fct_weather_forecast\n    GROUP BY m_valid_dt, city_nm, city_fk, county_nm, country_cd, forecast_dt\n),\n\n-- Step 2: Calculate rolling averages\nrolling_averages AS (\n    SELECT\n        city_nm\n        ,city_fk\n        ,county_nm\n        ,country_cd\n        ,m_valid_dt\n        -- Rolling averages (3 days)\n        ,AVG(temp_c_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS temperature_c_avg_3d\n\n        ,AVG(cloud_coverage_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS cloud_coverage_avg_3d\n\n        ,AVG(precipitation_mm_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS precipitation_mm_avg_3d\n\n        ,AVG(humidity_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS humidity_avg_3d\n\n        ,AVG(gust_kph_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS gust_kph_avg_3d\n\n        ,AVG(heatindex_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS heatindex_c_no_avg_3d\n\n        ,AVG(wind_kph_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS wind_kph_no_avg_3d\n\n        ,AVG(windchill_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 2 PRECEDING AND CURRENT ROW\n        ) AS windchill_c_no_avg_3d\n-- Rolling averages (1 week = 7 days)\n        ,AVG(temp_c_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS temperature_c_avg_1w\n\n        ,AVG(cloud_coverage_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS cloud_coverage_avg_1w\n\n        ,AVG(precipitation_mm_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS precipitation_mm_avg_1w\n\n        ,AVG(humidity_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS humidity_avg_1w\n\n        ,AVG(gust_kph_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS gust_kph_avg_1w\n\n        ,AVG(heatindex_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS heatindex_c_no_avg_1w\n\n        ,AVG(wind_kph_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS wind_kph_no_avg_1w\n\n        ,AVG(windchill_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 6 PRECEDING AND CURRENT ROW\n        ) AS windchill_c_no_avg_1w\n-- Rolling averages (2 weeks = 14 days)\n        ,AVG(temp_c_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS temperature_c_avg_2w\n\n        ,AVG(cloud_coverage_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS cloud_coverage_avg_2w\n\n        ,AVG(precipitation_mm_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS precipitation_mm_avg_2w\n\n        ,AVG(humidity_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS humidity_avg_2w\n\n        ,AVG(gust_kph_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS gust_kph_avg_2w\n\n        ,AVG(heatindex_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS heatindex_c_no_avg_2w\n\n        ,AVG(wind_kph_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS wind_kph_no_avg_2w\n\n        ,AVG(windchill_c_no_avg) OVER (\n            PARTITION BY city_nm, city_fk, county_nm, country_cd\n            ORDER BY m_valid_dt ROWS BETWEEN 13 PRECEDING AND CURRENT ROW\n        ) AS windchill_c_no_avg_2w\n    FROM daily_aggregates\n),\n\nunit_conversion AS (\n    SELECT\n        m_valid_dt\n        ,city_nm\n        ,city_fk\n        ,county_nm\n        ,country_cd\n        ,\n    \n    \n\n    temperature_c_avg_3d\n    , temperature_c_avg_3d * 9/5 + 32 AS temperature_f_avg_3d\n    , temperature_c_avg_3d + 273.15 AS temperature_k_avg_3d\n\n        ,\n    \n    \n\n    temperature_c_avg_1w\n    , temperature_c_avg_1w * 9/5 + 32 AS temperature_f_avg_1w\n    , temperature_c_avg_1w + 273.15 AS temperature_k_avg_1w\n\n        ,\n    \n    \n\n    temperature_c_avg_2w\n    , temperature_c_avg_2w * 9/5 + 32 AS temperature_f_avg_2w\n    , temperature_c_avg_2w + 273.15 AS temperature_k_avg_2w\n\n        ,cloud_coverage_avg_3d\n        ,cloud_coverage_avg_1w\n        ,cloud_coverage_avg_2w\n        ,precipitation_mm_avg_3d\n        ,precipitation_mm_avg_1w\n        ,precipitation_mm_avg_2w\n        ,humidity_avg_3d\n        ,humidity_avg_1w\n        ,humidity_avg_2w\n        ,\n    \n    \n\n    gust_kph_avg_3d\n    , gust_kph_avg_3d * 0.621371 AS gust_miph_avg_3d\n\n        ,\n    \n    \n\n    gust_kph_avg_1w\n    , gust_kph_avg_1w * 0.621371 AS gust_miph_avg_1w\n\n        ,\n    \n    \n\n    gust_kph_avg_2w\n    , gust_kph_avg_2w * 0.621371 AS gust_miph_avg_2w\n\n        ,\n    \n    \n\n    heatindex_c_no_avg_3d\n    , heatindex_c_no_avg_3d * 9/5 + 32 AS heatindex_f_no_avg_3d\n    , heatindex_c_no_avg_3d + 273.15 AS heatindex_k_no_avg_3d\n\n        ,\n    \n    \n\n    heatindex_c_no_avg_1w\n    , heatindex_c_no_avg_1w * 9/5 + 32 AS heatindex_f_no_avg_1w\n    , heatindex_c_no_avg_1w + 273.15 AS heatindex_k_no_avg_1w\n\n        ,\n    \n    \n\n    heatindex_c_no_avg_2w\n    , heatindex_c_no_avg_2w * 9/5 + 32 AS heatindex_f_no_avg_2w\n    , heatindex_c_no_avg_2w + 273.15 AS heatindex_k_no_avg_2w\n\n        ,\n    \n    \n\n    wind_kph_no_avg_3d\n    , wind_kph_no_avg_3d * 0.621371 AS wind_miph_no_avg_3d\n\n        ,\n    \n    \n\n    wind_kph_no_avg_1w\n    , wind_kph_no_avg_1w * 0.621371 AS wind_miph_no_avg_1w\n\n        ,\n    \n    \n\n    wind_kph_no_avg_2w\n    , wind_kph_no_avg_2w * 0.621371 AS wind_miph_no_avg_2w\n\n        ,\n    \n    \n\n    windchill_c_no_avg_3d\n    , windchill_c_no_avg_3d * 9/5 + 32 AS windchill_f_no_avg_3d\n    , windchill_c_no_avg_3d + 273.15 AS windchill_k_no_avg_3d\n\n        ,\n    \n    \n\n    windchill_c_no_avg_1w\n    , windchill_c_no_avg_1w * 9/5 + 32 AS windchill_f_no_avg_1w\n    , windchill_c_no_avg_1w + 273.15 AS windchill_k_no_avg_1w\n\n        ,\n    \n    \n\n    windchill_c_no_avg_2w\n    , windchill_c_no_avg_2w * 9/5 + 32 AS windchill_f_no_avg_2w\n    , windchill_c_no_avg_2w + 273.15 AS windchill_k_no_avg_2w\n\n    FROM rolling_averages\n)\n\nSELECT * FROM unit_conversion", "relation_name": "\"wh_weather\".\"dbt_gold\".\"g_fct_weather_forecast_avg\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:59:01.184418Z", "completed_at": "2025-04-27T13:59:01.184418Z"}, {"name": "execute", "started_at": "2025-04-27T13:59:01.184418Z", "completed_at": "2025-04-27T13:59:04.515404Z"}], "thread_id": "Thread-10 (worker)", "execution_time": 3.330986499786377, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.dq_standard_tests_summary", "compiled": true, "compiled_code": "WITH dq_standard_tests AS (\n    SELECT\n        *\n    FROM \"wh_weather\".\"dbt_dq\".\"dq_standard_tests\"\n),\n\nunique_tests AS (\n    SELECT\n        m_valid_dt\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,SUM(failed_record_cnt) AS failed_records_cnt\n    FROM dq_standard_tests\n    GROUP BY m_valid_dt, table_nm, test_type_cd, tested_field_nm\n),\n\nsummary AS (\n    SELECT\n        m_valid_dt\n        ,test_type_cd\n        ,COUNT(*) AS test_cnt \n        ,SUM(CASE WHEN failed_records_cnt > 0 THEN 1 ELSE 0 END) AS failed_test_cnt\n        ,SUM(CASE WHEN failed_records_cnt = 0 THEN 1 ELSE 0 END) AS passed_test_cnt\n        ,SUM(failed_records_cnt) AS failed_records_cnt \n    FROM unique_tests\n    GROUP BY m_valid_dt, test_type_cd\n)\nSELECT * \nFROM summary", "relation_name": "\"wh_weather\".\"dbt_dq\".\"dq_standard_tests_summary\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:58:59.581689Z", "completed_at": "2025-04-27T13:58:59.581689Z"}, {"name": "execute", "started_at": "2025-04-27T13:58:59.581689Z", "completed_at": "2025-04-27T13:59:05.505025Z"}], "thread_id": "Thread-7 (worker)", "execution_time": 5.9233362674713135, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.g_fct_weather_forecast", "compiled": true, "compiled_code": "WITH s_fct_weather_forecast AS (\n    SELECT\n        *\n    FROM \"wh_weather\".\"dbt_silver\".\"s_fct_weather_forecast\"\n)\n\nSELECT * FROM s_fct_weather_forecast", "relation_name": "\"wh_weather\".\"dbt_gold\".\"g_fct_weather_forecast\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:59:04.199244Z", "completed_at": "2025-04-27T13:59:04.199244Z"}, {"name": "execute", "started_at": "2025-04-27T13:59:04.199244Z", "completed_at": "2025-04-27T13:59:06.405063Z"}], "thread_id": "Thread-8 (worker)", "execution_time": 2.2068660259246826, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.dq_dim_table_nm", "compiled": true, "compiled_code": "WITH dq_standard_tests AS (\n    SELECT DISTINCT \n        table_nm\n    FROM \"wh_weather\".\"dbt_dq\".\"dq_standard_tests\"\n),\n\ndq_business_tests AS (\n    SELECT DISTINCT \n        table_nm\n    FROM \"wh_weather\".\"dbt_dq\".\"dq_business_tests\"\n)\n\nSELECT * FROM dq_standard_tests\nUNION\nSELECT * FROM dq_business_tests", "relation_name": "\"wh_weather\".\"dbt_dq\".\"dq_dim_table_nm\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-04-27T13:59:02.229335Z", "completed_at": "2025-04-27T13:59:02.229335Z"}, {"name": "execute", "started_at": "2025-04-27T13:59:02.229335Z", "completed_at": "2025-04-27T13:59:06.413261Z"}], "thread_id": "Thread-9 (worker)", "execution_time": 4.184929847717285, "adapter_response": {"_message": "OK", "rows_affected": -1}, "message": "OK", "failures": null, "unique_id": "model.weather_dbt.dq_business_tests_summary", "compiled": true, "compiled_code": "WITH dq_business_tests AS (\n    SELECT\n        *\n    FROM \"wh_weather\".\"dbt_dq\".\"dq_business_tests\"\n),\n\nunique_tests AS (\n    SELECT\n        m_valid_dt\n        ,table_nm\n        ,test_type_cd\n        ,tested_field_nm\n        ,SUM(failed_record_cnt) AS failed_records_cnt\n    FROM dq_business_tests\n    GROUP BY m_valid_dt, table_nm, test_type_cd, tested_field_nm\n),\n\nsummary AS (\n    SELECT\n        m_valid_dt\n        ,test_type_cd\n        ,COUNT(*) AS test_cnt \n        ,SUM(CASE WHEN failed_records_cnt > 0 THEN 1 ELSE 0 END) AS failed_test_cnt\n        ,SUM(CASE WHEN failed_records_cnt = 0 THEN 1 ELSE 0 END) AS passed_test_cnt\n        ,SUM(failed_records_cnt) AS failed_records_cnt \n    FROM unique_tests\n    GROUP BY m_valid_dt, test_type_cd\n)\nSELECT * \nFROM summary", "relation_name": "\"wh_weather\".\"dbt_dq\".\"dq_business_tests_summary\"", "batch_results": null}], "elapsed_time": 16.212517976760864, "args": {"printer_width": 80, "static_parser": true, "log_level": "info", "quiet": false, "require_yaml_configuration_for_mf_time_spines": false, "invocation_command": "dbt run --model s_fct_weather_forecast+", "which": "run", "source_freshness_run_project_hooks": false, "empty": false, "populate_cache": true, "log_file_max_bytes": 10485760, "partial_parse_file_diff": true, "log_format": "default", "project_dir": "C:\\Users\\D\u00e1vidDobos\\szakdoga\\weather_dbt", "indirect_selection": "eager", "print": true, "require_resource_names_without_spaces": false, "log_format_file": "debug", "log_path": "C:\\Users\\D\u00e1vidDobos\\szakdoga\\weather_dbt\\logs", "macro_debugging": false, "write_json": true, "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "favor_state": false, "partial_parse": true, "select": ["s_fct_weather_forecast+"], "use_colors_file": true, "profiles_dir": "C:\\Users\\D\u00e1vidDobos\\.dbt", "introspect": true, "skip_nodes_if_on_run_start_fails": false, "cache_selected_only": false, "require_nested_cumulative_type_params": false, "show_resource_report": false, "state_modified_compare_vars": false, "send_anonymous_usage_stats": true, "strict_mode": false, "log_level_file": "debug", "use_colors": true, "defer": false, "require_explicit_package_overrides_for_builtin_materializations": true, "version_check": true, "vars": {}, "state_modified_compare_more_unrendered_values": false, "require_batched_execution_for_custom_microbatch_strategy": false}}